{"version":3,"file":"ngx-highlightjs-plus.umd.js","sources":["ng://ngx-highlightjs/plus/gist.model.ts","ng://ngx-highlightjs/plus/code-loader.ts","ng://ngx-highlightjs/plus/gist.ts","ng://ngx-highlightjs/plus/code-from-url.ts","ng://ngx-highlightjs/plus/highlight-plus.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport interface GistOptions {\r\n  clientId: string;\r\n  clientSecret: string;\r\n}\r\n\r\nexport const GIST_OPTIONS = new InjectionToken<GistOptions>('GIST_OPTIONS');\r\n\r\ninterface Owner {\r\n  login: string;\r\n  id: number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  events_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  site_admin: boolean;\r\n}\r\n\r\ninterface User {\r\n  login: string;\r\n  id: number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  events_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  site_admin: boolean;\r\n}\r\n\r\ninterface ChangeStatus {\r\n  total: number;\r\n  additions: number;\r\n  deletions: number;\r\n}\r\n\r\ninterface History {\r\n  user: User;\r\n  version: string;\r\n  committed_at: Date;\r\n  change_status: ChangeStatus;\r\n  url: string;\r\n}\r\n\r\ninterface Files {\r\n  [fileName: string]: {\r\n    filename: string;\r\n    type: string;\r\n    language: string;\r\n    raw_url: string;\r\n    size: number;\r\n    truncated: boolean;\r\n    content: string;\r\n  };\r\n}\r\n\r\nexport interface Gist {\r\n  url: string;\r\n  forks_url: string;\r\n  commits_url: string;\r\n  id: string;\r\n  node_id: string;\r\n  git_pull_url: string;\r\n  git_push_url: string;\r\n  html_url: string;\r\n  files: Files;\r\n  public: boolean;\r\n  created_at: Date;\r\n  updated_at: Date;\r\n  description: string;\r\n  comments: number;\r\n  user?: any;\r\n  comments_url: string;\r\n  owner: Owner;\r\n  forks: any[];\r\n  history: History[];\r\n  truncated: boolean;\r\n}\r\n\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, EMPTY } from 'rxjs';\r\nimport { catchError, publishReplay, refCount } from 'rxjs/operators';\r\nimport { Gist, GIST_OPTIONS, GistOptions } from './gist.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CodeLoader {\r\n  constructor(private _http: HttpClient, @Optional() @Inject(GIST_OPTIONS) private _options: GistOptions) {\r\n  }\r\n\r\n  /**\r\n   * Get plus code\r\n   * @param id Gist ID\r\n   */\r\n  getCodeFromGist(id: string): Observable<Gist> {\r\n    let params: HttpParams;\r\n    if (this.isOAuthProvided()) {\r\n      params = new HttpParams().set('client_id', this._options.clientId).set('client_secret', this._options.clientSecret);\r\n    }\r\n    return this.fetchFile(`https://api.github.com/gists/${id}`, { params, responseType: 'json' });\r\n  }\r\n\r\n  /**\r\n   * Get code by URL\r\n   * @param url File raw link\r\n   */\r\n  getCodeFromUrl(url: string): Observable<string> {\r\n    return this.fetchFile(url, { responseType: 'text' });\r\n  }\r\n\r\n  /**\r\n   * Check if OAuth option is provided\r\n   */\r\n  private isOAuthProvided(): boolean {\r\n    return !!this._options && !!this._options.clientId && !!this._options.clientSecret;\r\n  }\r\n\r\n  private fetchFile(url: string, options: any): Observable<any> {\r\n    // Check if URL is valid\r\n    if (isUrl(url)) {\r\n      return this._http.get(url, options).pipe(\r\n        // Catch response\r\n        publishReplay(1),\r\n        refCount(),\r\n        catchError((err: Error) => {\r\n          console.error('[NgxHighlight]: Unable to fetch the URL!', err.message);\r\n          return EMPTY;\r\n        })\r\n      );\r\n    }\r\n    return EMPTY;\r\n  }\r\n\r\n}\r\n\r\nfunction isUrl(url: string) {\r\n  const regExp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n  return regExp.test(url);\r\n}\r\n","import { Directive, Pipe, Input, Output, PipeTransform, EventEmitter } from '@angular/core';\r\nimport { CodeLoader } from './code-loader';\r\nimport { Gist } from './gist.model';\r\n\r\n@Directive({\r\n  selector: '[gist]'\r\n})\r\nexport class GistDirective {\r\n\r\n  constructor(private _loader: CodeLoader) {\r\n  }\r\n\r\n  @Input()\r\n  private set gist(value: string) {\r\n    if (value) {\r\n      this._loader.getCodeFromGist(value).subscribe((gist: Gist) => this.gistLoad.emit(gist));\r\n    }\r\n  }\r\n\r\n  @Output() gistLoad = new EventEmitter<Gist>();\r\n}\r\n\r\n@Pipe({\r\n  name: 'gistFile'\r\n})\r\nexport class GistFilePipe implements PipeTransform {\r\n  transform(gist: Gist, fileName: string): string | null {\r\n    return (gist && gist.files && gist.files[fileName]) ? gist.files[fileName].content : null;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CodeLoader } from './code-loader';\r\n\r\n@Pipe({\r\n  name: 'codeFromUrl'\r\n})\r\nexport class CodeFromUrlPipe implements PipeTransform {\r\n\r\n  constructor(private _loader: CodeLoader) {\r\n  }\r\n\r\n  transform(url: string): Observable<string> {\r\n    return this._loader.getCodeFromUrl(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HighlightModule } from 'ngx-highlightjs';\r\n// Uncomment the following line for development\r\n// import { HighlightModule } from '../../src/public-api';\r\nimport { GistFilePipe, GistDirective } from './gist';\r\nimport { CodeFromUrlPipe } from './code-from-url';\r\n\r\n@NgModule({\r\n  imports: [\r\n    HighlightModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [\r\n    GistDirective,\r\n    GistFilePipe,\r\n    CodeFromUrlPipe\r\n  ],\r\n  exports: [\r\n    HighlightModule,\r\n    GistDirective,\r\n    GistFilePipe,\r\n    CodeFromUrlPipe\r\n  ]\r\n})\r\nexport class HighlightPlusModule {\r\n}\r\n"],"names":["InjectionToken","HttpParams","publishReplay","refCount","catchError","EMPTY","Injectable","HttpClient","Optional","Inject","EventEmitter","Directive","Input","Output","Pipe","NgModule","HighlightModule","HttpClientModule"],"mappings":";;;;;;;;;;IAAA;;;IAEA,0BAGC;;;QAFC,+BAAiB;;QACjB,mCAAqB;;;AAGvB,QAAa,YAAY,GAAG,IAAIA,mBAAc,CAAc,cAAc,CAAC;;;;IAE3E,oBAmBC;;;QAlBC,sBAAc;;QACd,mBAAW;;QACX,wBAAgB;;QAChB,2BAAmB;;QACnB,4BAAoB;;QACpB,oBAAY;;QACZ,yBAAiB;;QACjB,8BAAsB;;QACtB,8BAAsB;;QACtB,0BAAkB;;QAClB,4BAAoB;;QACpB,kCAA0B;;QAC1B,kCAA0B;;QAC1B,0BAAkB;;QAClB,2BAAmB;;QACnB,oCAA4B;;QAC5B,qBAAa;;QACb,2BAAoB;;;;;IAGtB,mBAmBC;;;QAlBC,qBAAc;;QACd,kBAAW;;QACX,uBAAgB;;QAChB,0BAAmB;;QACnB,2BAAoB;;QACpB,mBAAY;;QACZ,wBAAiB;;QACjB,6BAAsB;;QACtB,6BAAsB;;QACtB,yBAAkB;;QAClB,2BAAoB;;QACpB,iCAA0B;;QAC1B,iCAA0B;;QAC1B,yBAAkB;;QAClB,0BAAmB;;QACnB,mCAA4B;;QAC5B,oBAAa;;QACb,0BAAoB;;;;;IAGtB,2BAIC;;;QAHC,6BAAc;;QACd,iCAAkB;;QAClB,iCAAkB;;;;;IAGpB,sBAMC;;;QALC,uBAAW;;QACX,0BAAgB;;QAChB,+BAAmB;;QACnB,gCAA4B;;QAC5B,sBAAY;;;;;IAGd,oBAUC;;;;IAED,mBAqBC;;;QApBC,mBAAY;;QACZ,yBAAkB;;QAClB,2BAAoB;;QACpB,kBAAW;;QACX,uBAAgB;;QAChB,4BAAqB;;QACrB,4BAAqB;;QACrB,wBAAiB;;QACjB,qBAAa;;QACb,sBAAgB;;QAChB,0BAAiB;;QACjB,0BAAiB;;QACjB,2BAAoB;;QACpB,wBAAiB;;QACjB,oBAAW;;QACX,4BAAqB;;QACrB,qBAAa;;QACb,qBAAa;;QACb,uBAAmB;;QACnB,yBAAmB;;;;;;;ACjGrB;QAUE,oBAAoB,KAAiB,EAA4C,QAAqB;YAAlF,UAAK,GAAL,KAAK,CAAY;YAA4C,aAAQ,GAAR,QAAQ,CAAa;SACrG;;;;;;;;;;QAMD,oCAAe;;;;;QAAf,UAAgB,EAAU;;gBACpB,MAAkB;YACtB,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;gBAC1B,MAAM,GAAG,IAAIC,eAAU,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;aACrH;YACD,OAAO,IAAI,CAAC,SAAS,CAAC,kCAAgC,EAAI,EAAE,EAAE,MAAM,QAAA,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;SAC/F;;;;;;;;;;QAMD,mCAAc;;;;;QAAd,UAAe,GAAW;YACxB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;SACtD;;;;;;;;;QAKO,oCAAe;;;;;QAAvB;YACE,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;SACpF;;;;;;;QAEO,8BAAS;;;;;;QAAjB,UAAkB,GAAW,EAAE,OAAY;;YAEzC,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;gBACd,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI;;gBAEtCC,uBAAa,CAAC,CAAC,CAAC,EAChBC,kBAAQ,EAAE,EACVC,oBAAU;;;;gBAAC,UAAC,GAAU;oBACpB,OAAO,CAAC,KAAK,CAAC,0CAA0C,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;oBACvE,OAAOC,UAAK,CAAC;iBACd,EAAC,CACH,CAAC;aACH;YACD,OAAOA,UAAK,CAAC;SACd;;oBAhDFC,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;oBAPQC,eAAU;oDASuBC,aAAQ,YAAIC,WAAM,SAAC,YAAY;;;yBAVzE;KAMA,IAkDC;;;;;;QA9Ca,2BAAyB;;;;;QAAE,8BAA+D;;;;;;IAgDxG,SAAS,KAAK,CAAC,GAAW;;YAClB,MAAM,GAAG,mFAAmF;QAClG,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACzB;;;;;;AC7DD;QASE,uBAAoB,OAAmB;YAAnB,YAAO,GAAP,OAAO,CAAY;YAU7B,aAAQ,GAAG,IAAIC,iBAAY,EAAQ,CAAC;SAT7C;QAED,sBACY,+BAAI;;;;;;YADhB,UACiB,KAAa;gBAD9B,iBAKC;gBAHC,IAAI,KAAK,EAAE;oBACT,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS;;;;oBAAC,UAAC,IAAU,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,EAAC,CAAC;iBACzF;aACF;;;WAAA;;oBAbFC,cAAS,SAAC;wBACT,QAAQ,EAAE,QAAQ;qBACnB;;;;oBALQ,UAAU;;;2BAWhBC,UAAK;+BAOLC,WAAM;;QACT,oBAAC;KAhBD,IAgBC;;;QADC,iCAA8C;;;;;QAVlC,gCAA2B;;AAazC;QAAA;SAOC;;;;;;QAHC,gCAAS;;;;;QAAT,UAAU,IAAU,EAAE,QAAgB;YACpC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;SAC3F;;oBANFC,SAAI,SAAC;wBACJ,IAAI,EAAE,UAAU;qBACjB;;QAKD,mBAAC;KAPD;;;;;;ACtBA;QASE,yBAAoB,OAAmB;YAAnB,YAAO,GAAP,OAAO,CAAY;SACtC;;;;;QAED,mCAAS;;;;QAAT,UAAU,GAAW;YACnB,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SACzC;;oBAVFA,SAAI,SAAC;wBACJ,IAAI,EAAE,aAAa;qBACpB;;;;oBAJQ,UAAU;;QAanB,sBAAC;KAXD,IAWC;;;;;;QANa,kCAA2B;;;;;;;ACTzC;QAQA;SAkBC;;oBAlBAC,aAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,8BAAe;4BACfC,qBAAgB;yBACjB;wBACD,YAAY,EAAE;4BACZ,aAAa;4BACb,YAAY;4BACZ,eAAe;yBAChB;wBACD,OAAO,EAAE;4BACPD,8BAAe;4BACf,aAAa;4BACb,YAAY;4BACZ,eAAe;yBAChB;qBACF;;QAED,0BAAC;KAlBD;;;;;;;;;;;;;;;;;"}